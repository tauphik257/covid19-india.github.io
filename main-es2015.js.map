{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/dashboard/dashboard.component.ts","./src/app/component/dashboard/dashboard.component.html","./src/app/component/error/error.component.ts","./src/app/component/error/error.component.html","./src/app/component/footer/footer/footer.component.ts","./src/app/component/footer/footer/footer.component.html","./src/app/component/home/home.component.ts","./src/app/component/home/home.component.html","./src/app/component/zone/covid-zone/covid-zone.component.ts","./src/app/component/zone/covid-zone/covid-zone.component.html","./src/app/services/filter-pipe.ts","./src/app/services/server.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid19';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { HomeComponent } from './component/home/home.component';\nimport { DashboardComponent } from './component/dashboard/dashboard.component';\nimport { ErrorComponent } from './component/error/error.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CovidZoneComponent } from './component/zone/covid-zone/covid-zone.component';\nimport {MatTableModule} from '@angular/material/table';\nimport { SearchPipe } from './services/filter-pipe';\nimport { FooterComponent } from './component/footer/footer/footer.component';\n\nconst route: Routes = [\n  {path:'', component: HomeComponent, children:[\n    {path: '', component: DashboardComponent},\n    {path: 'covid-zone', component: CovidZoneComponent}\n  ]},\n  {path: '*', component: ErrorComponent}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    DashboardComponent,\n    ErrorComponent,\n    CovidZoneComponent,\n    SearchPipe,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(route),HttpClientModule,ReactiveFormsModule,MatTableModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ServerService } from '../../services/server.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  \n  resData: any;\n  constructor(\n    private serverService: ServerService\n  ) { }\n\n  ngOnInit(): void {\n    this.getLetestData();\n  }\n\n  getLetestData(){\n    this.serverService.getServerReq('get', 'stats/latest')\n    .subscribe((data: Response)=>{\n      this.resData = data;\n      this.resData = this.resData.data;\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"cardWrapper\">\n        <div class=\"card\">\n            <div class=\"cardText\">\n                <h5>Totel Case</h5>\n            </div>\n            <div class=\"count\">\n                <h3>{{resData.summary.total | number}}</h3>\n            </div>\n            <div class=\"cardIcon yellow\">\n                <span class=\"material-icons\">local_hospital</span>\n            </div>\n        </div>\n        <div class=\"card\">\n            <div class=\"cardText\">\n                <h5>Discharged</h5>\n            </div>\n            <div class=\"count\">\n                <h3>{{resData.summary.discharged | number}}</h3>\n            </div>\n            <div class=\"cardIcon green\">\n                <span class=\"material-icons\">assignment_turned_in</span>\n            </div>\n        </div>\n        <div class=\"card\">\n            <div class=\"cardText\">\n                <h5>Deaths</h5>\n            </div>\n            <div class=\"count\">\n                <h3>{{resData.summary.deaths | number}}</h3>\n            </div>\n            <div class=\"cardIcon red\">\n                <span class=\"material-icons\">local_pharmacy</span>\n            </div>\n        </div>\n        <div class=\"card\">\n            <div class=\"cardText\">\n                <h5>Active Case</h5>\n            </div>\n            <div class=\"count\">\n                <h3>{{resData.summary.total - (resData.summary.deaths + resData.summary.discharged) | number}}</h3>\n            </div>\n            <div class=\"cardIcon blue\">\n                <span class=\"material-icons\">local_library</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"title\">\n        <h4>Covid-19 State Wise Details in India</h4>\n    </div>\n    <div class=\"stateTable\">\n        <ul class=\"stateTableList listHeader\">\n            <li>\n                <h6>State</h6>\n                <h6>Total</h6>\n                <h6>Recovered</h6>\n                <h6>Death</h6>\n            </li>\n        </ul>\n        <ul class=\"stateTableList\">\n            <li *ngFor=\"let stateData of resData.regional\">\n                <span>{{stateData.loc}}</span>\n                <span>{{stateData.totalConfirmed}}</span>\n                <span>{{stateData.discharged}}</span>\n                <span>{{stateData.deaths}}</span>\n            </li>\n        </ul>\n    </div>\n    <app-footer></app-footer>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  contactData:any\n  constructor(\n    private serverService: ServerService\n  ) { }\n\n  ngOnInit(): void {\n    this.getContactData()\n  }\n  getContactData(){\n    this.serverService.getServerReq('get', 'contacts')\n    .subscribe((data: Response)=>{\n      this.contactData = data;\n      this.contactData = this.contactData.data;\n    });\n  }\n}\n","<div class=\"container\">\n    <footer class=\"footerSec\">\n        <h4>Government official contact details</h4>\n        <ul class=\"socialLink\">\n            <li>\n                <a href=\"{{contactData.contacts.primary.twitter}}\"><img src=\"assets/icons/twitter.svg\" alt=\"Twitter\"/></a>\n            </li>\n            <li>\n                <a href=\"{{contactData.contacts.primary.facebook}}\"><img src=\"assets/icons/facebook.svg\" alt=\"Twitter\"/></a>\n            </li>\n            <li>\n                <a href=\"mailto:{{contactData.contacts.primary.email}}\"><img src=\"assets/icons/gmail.svg\" alt=\"Email\"/></a>\n            </li>\n        </ul>\n        <a href=\"tel:{{contactData.contacts.primary.number}}\">Phone: {{contactData.contacts.primary.number}} | Tollfree (1075)</a>\n        <div>\n            <a href=\"mailto:{{contactData.contacts.primary.email}}\">Email: {{contactData.contacts.primary.email}}</a>\n        </div>\n        <p class=\"disclaimer\">Disclaimer: This data can very with the actual data | Please do a cross check before making dicision. We are updating the data on regular basis for better information.</p>\n    </footer>\n</div>","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor(\n    \n  ) { }\n\n  ngOnInit(): void {\n   \n  }\n\n  \n\n}\n","<header>\n    <div class=\"container\">\n        <div class=\"headerLink\">\n            <a [routerLink]=\"['']\">\n                <img src=\"assets/icons/covid19_logo.png\" alt=\"covid 19 Logo\"/>\n            </a>\n            <a class=\"link\" [routerLink]=\"['/covid-zone']\">Get zone details</a>\n        </div>\n    </div>\n</header>\n<div class=\"pageWrapper\">\n    <router-outlet></router-outlet>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport zoneData  from '../../../../assets/json/covidZone.json';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  District: string;\n  State: string;\n  Zone: string;\n}\nvar zoneFilterData = zoneData;\nconst ELEMENT_DATA: PeriodicElement[] = zoneData;\n\n@Component({\n  selector: 'app-covid-zone',\n  templateUrl: './covid-zone.component.html',\n  styleUrls: ['./covid-zone.component.css']\n})\nexport class CovidZoneComponent implements OnInit {\n  inputData: any;\n  constructor() { }\n\n  covidForm = new FormGroup({\n    District: new FormControl(''),\n  });\n  displayedColumns: string[] = ['District', 'State', 'Zone'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n  //dataSource = ELEMENT_DATA;\n  //dataSource.filter = this.inputData.trim().toLocaleLowerCase();\n  \n  ngOnInit(): void {\n    setTimeout(()=>{\n      zoneFilterData = [\n        {\"District\":\"South Andamans\",\"State\":\"Andaman And Nicobar Islands\",\"Zone\":\"Red Zone\"},\n        {\"District\":\"Nicobars\",\"State\":\"Andaman And Nicobar Islands\",\"Zone\":\"Green Zone\"},\n        {\"District\":\"North And Middle Andaman\",\"State\":\"Andaman And Nicobar Islands\",\"Zone\":\"Green Zone\"},\n        {\"District\":\"Kurnool\",\"State\":\"Andhra Pradesh\",\"Zone\":\"Red Zone\"},\n        {\"District\":\"Guntur\",\"State\":\"Andhra Pradesh\",\"Zone\":\"Red Zone\"},]\n    }, 0)\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); \n    this.inputData = filterValue;\n    filterValue = filterValue.toLowerCase();\n    this.dataSource.filter = filterValue;\n  }\n\n}\n","<div class=\"covidZone\">\n    <div class=\"container\">\n        <h4>Covid-19 <span class=\"redColor\">Red</span>, <span class=\"greenColor\">Green</span> and <span class=\"yellowColor\">Orange</span> Zones in India</h4>\n        <div class=\"formZone\">\n            <form ngForm=\"covidForm\" [formGroup]=\"covidForm\">\n                <input type=\"text\" formControlName=\"District\" (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search your district or state name...\">\n            </form>\n        </div>\n        <div class=\"zoneTable\">\n            <table width=\"100%\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n                <!-- District Column -->\n                <ng-container matColumnDef=\"District\">\n                <th mat-header-cell *matHeaderCellDef> District </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.District}} </td>\n                </ng-container>\n                <!-- State Column -->\n                <ng-container matColumnDef=\"State\">\n                <th mat-header-cell *matHeaderCellDef> State </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.State}} </td>\n                </ng-container>\n                <!-- Zone Column -->\n                <ng-container matColumnDef=\"Zone\">\n                <th mat-header-cell *matHeaderCellDef> Zone </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"{{element.Zone}}\"> {{element.Zone}} </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n            <div [ngClass]=\"dataSource.filteredData.length > 0 ? 'hidden': 'visible'\">\n                <h6>Sorry, we couldn't find any result matching <b>\"{{inputData}}\"</b>. Please verify your speling and try again</h6>\n            </div>\n        </div>\n    </div>\n</div>\n<app-footer></app-footer>","import { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({\r\n  name: 'customerEmailFilter'\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    if (!args) {\r\n      return value;\r\n    }\r\n    return value.filter((val:any) => {\r\n      let rVal = ((val.email.toLocaleLowerCase().includes(args)));\r\n      return rVal;\r\n    })\r\n\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerService {\n  covidZone:any\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getServerReq(method: string, apiEnd:string,){\n    const apiUrl = environment.API_URL + apiEnd;\n    if(method == 'get'){\n      return this.http.get(apiUrl);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'https://api.rootnet.in/covid19-in/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}