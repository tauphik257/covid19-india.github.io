{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/dashboard/dashboard.component.ts","webpack:///src/app/component/dashboard/dashboard.component.html","webpack:///src/app/component/error/error.component.ts","webpack:///src/app/component/error/error.component.html","webpack:///src/app/component/footer/footer/footer.component.ts","webpack:///src/app/component/footer/footer/footer.component.html","webpack:///src/app/component/home/home.component.ts","webpack:///src/app/component/home/home.component.html","webpack:///src/app/component/zone/covid-zone/covid-zone.component.ts","webpack:///src/app/component/zone/covid-zone/covid-zone.component.html","webpack:///src/app/services/filter-pipe.ts","webpack:///src/app/services/server.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","route","path","component","children","AppModule","register","enabled","production","declarations","providers","bootstrap","DashboardComponent","serverService","getLetestData","getServerReq","subscribe","data","resData","ErrorComponent","FooterComponent","getContactData","contactData","HomeComponent","zoneFilterData","ELEMENT_DATA","CovidZoneComponent","covidForm","District","displayedColumns","dataSource","setTimeout","filterValue","trim","inputData","toLowerCase","filter","applyFilter","SearchPipe","value","args","val","rVal","email","toLocaleLowerCase","includes","name","ServerService","http","method","apiEnd","apiUrl","API_URL","get","providedIn","environment","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid19';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { HomeComponent } from './component/home/home.component';\nimport { DashboardComponent } from './component/dashboard/dashboard.component';\nimport { ErrorComponent } from './component/error/error.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CovidZoneComponent } from './component/zone/covid-zone/covid-zone.component';\nimport {MatTableModule} from '@angular/material/table';\nimport { SearchPipe } from './services/filter-pipe';\nimport { FooterComponent } from './component/footer/footer/footer.component';\n\nconst route: Routes = [\n  {path:'', component: HomeComponent, children:[\n    {path: '', component: DashboardComponent},\n    {path: 'covid-zone', component: CovidZoneComponent}\n  ]},\n  {path: '*', component: ErrorComponent}\n]\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    DashboardComponent,\n    ErrorComponent,\n    CovidZoneComponent,\n    SearchPipe,\n    FooterComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(route),HttpClientModule,ReactiveFormsModule,MatTableModule,\n    AppRoutingModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production }),\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ServerService } from '../../services/server.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  \n  resData: any;\n  constructor(\n    private serverService: ServerService\n  ) { }\n\n  ngOnInit(): void {\n    this.getLetestData();\n  }\n\n  getLetestData(){\n    this.serverService.getServerReq('get', 'stats/latest')\n    .subscribe((data: Response)=>{\n      this.resData = data;\n      this.resData = this.resData.data;\n    });\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"cardWrapper\">\n        <div class=\"card\">\n            <div class=\"cardText\">\n                <h5>Totel Case</h5>\n            </div>\n            <div class=\"count\">\n                <h3>{{resData.summary.total | number}}</h3>\n            </div>\n            <div class=\"cardIcon yellow\">\n                <span class=\"material-icons\">local_hospital</span>\n            </div>\n        </div>\n        <div class=\"card\">\n            <div class=\"cardText\">\n                <h5>Discharged</h5>\n            </div>\n            <div class=\"count\">\n                <h3>{{resData.summary.discharged | number}}</h3>\n            </div>\n            <div class=\"cardIcon green\">\n                <span class=\"material-icons\">assignment_turned_in</span>\n            </div>\n        </div>\n        <div class=\"card\">\n            <div class=\"cardText\">\n                <h5>Deaths</h5>\n            </div>\n            <div class=\"count\">\n                <h3>{{resData.summary.deaths | number}}</h3>\n            </div>\n            <div class=\"cardIcon red\">\n                <span class=\"material-icons\">local_pharmacy</span>\n            </div>\n        </div>\n        <div class=\"card\">\n            <div class=\"cardText\">\n                <h5>Active Case</h5>\n            </div>\n            <div class=\"count\">\n                <h3>{{resData.summary.total - (resData.summary.deaths + resData.summary.discharged) | number}}</h3>\n            </div>\n            <div class=\"cardIcon blue\">\n                <span class=\"material-icons\">local_library</span>\n            </div>\n        </div>\n    </div>\n    <div class=\"title\">\n        <h4>Covid-19 State Wise Details in India</h4>\n    </div>\n    <div class=\"stateTable\">\n        <ul class=\"stateTableList listHeader\">\n            <li>\n                <h6>State</h6>\n                <h6>Total</h6>\n                <h6>Recovered</h6>\n                <h6>Death</h6>\n            </li>\n        </ul>\n        <ul class=\"stateTableList\">\n            <li *ngFor=\"let stateData of resData.regional\">\n                <span>{{stateData.loc}}</span>\n                <span>{{stateData.totalConfirmed}}</span>\n                <span>{{stateData.discharged}}</span>\n                <span>{{stateData.deaths}}</span>\n            </li>\n        </ul>\n    </div>\n    <app-footer></app-footer>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>error works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ServerService } from 'src/app/services/server.service';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n  contactData:any\n  constructor(\n    private serverService: ServerService\n  ) { }\n\n  ngOnInit(): void {\n    this.getContactData()\n  }\n  getContactData(){\n    this.serverService.getServerReq('get', 'contacts')\n    .subscribe((data: Response)=>{\n      this.contactData = data;\n      this.contactData = this.contactData.data;\n    });\n  }\n}\n","<div class=\"container\">\n    <footer class=\"footerSec\">\n        <h4>Government official contact details</h4>\n        <ul class=\"socialLink\">\n            <li>\n                <a href=\"{{contactData.contacts.primary.twitter}}\"><img src=\"assets/icons/twitter.svg\" alt=\"Twitter\"/></a>\n            </li>\n            <li>\n                <a href=\"{{contactData.contacts.primary.facebook}}\"><img src=\"assets/icons/facebook.svg\" alt=\"Twitter\"/></a>\n            </li>\n            <li>\n                <a href=\"mailto:{{contactData.contacts.primary.email}}\"><img src=\"assets/icons/gmail.svg\" alt=\"Email\"/></a>\n            </li>\n        </ul>\n        <a href=\"tel:{{contactData.contacts.primary.number}}\">Phone: {{contactData.contacts.primary.number}} | Tollfree (1075)</a>\n        <div>\n            <a href=\"mailto:{{contactData.contacts.primary.email}}\">Email: {{contactData.contacts.primary.email}}</a>\n        </div>\n        <p class=\"disclaimer\">Disclaimer: This data can very with the actual data | Please do a cross check before making dicision. We are updating the data on regular basis for better information.</p>\n    </footer>\n</div>","import { Component, OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  constructor(\n    \n  ) { }\n\n  ngOnInit(): void {\n   \n  }\n\n  \n\n}\n","<header>\n    <div class=\"container\">\n        <div class=\"headerLink\">\n            <a [routerLink]=\"['']\">\n                <img src=\"assets/icons/covid19_logo.png\" alt=\"covid 19 Logo\"/>\n            </a>\n            <a class=\"link\" [routerLink]=\"['/covid-zone']\">Get zone details</a>\n        </div>\n    </div>\n</header>\n<div class=\"pageWrapper\">\n    <router-outlet></router-outlet>\n</div>\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport zoneData  from '../../../../assets/json/covidZone.json';\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport interface PeriodicElement {\n  District: string;\n  State: string;\n  Zone: string;\n}\nvar zoneFilterData = zoneData;\nconst ELEMENT_DATA: PeriodicElement[] = zoneData;\n\n@Component({\n  selector: 'app-covid-zone',\n  templateUrl: './covid-zone.component.html',\n  styleUrls: ['./covid-zone.component.css']\n})\nexport class CovidZoneComponent implements OnInit {\n  inputData: any;\n  constructor() { }\n\n  covidForm = new FormGroup({\n    District: new FormControl(''),\n  });\n  displayedColumns: string[] = ['District', 'State', 'Zone'];\n  dataSource = new MatTableDataSource(ELEMENT_DATA);\n  //dataSource = ELEMENT_DATA;\n  //dataSource.filter = this.inputData.trim().toLocaleLowerCase();\n  \n  ngOnInit(): void {\n    setTimeout(()=>{\n      zoneFilterData = [\n        {\"District\":\"South Andamans\",\"State\":\"Andaman And Nicobar Islands\",\"Zone\":\"Red Zone\"},\n        {\"District\":\"Nicobars\",\"State\":\"Andaman And Nicobar Islands\",\"Zone\":\"Green Zone\"},\n        {\"District\":\"North And Middle Andaman\",\"State\":\"Andaman And Nicobar Islands\",\"Zone\":\"Green Zone\"},\n        {\"District\":\"Kurnool\",\"State\":\"Andhra Pradesh\",\"Zone\":\"Red Zone\"},\n        {\"District\":\"Guntur\",\"State\":\"Andhra Pradesh\",\"Zone\":\"Red Zone\"},]\n    }, 0)\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); \n    this.inputData = filterValue;\n    filterValue = filterValue.toLowerCase();\n    this.dataSource.filter = filterValue;\n  }\n\n}\n","<div class=\"covidZone\">\n    <div class=\"container\">\n        <h4>Covid-19 <span class=\"redColor\">Red</span>, <span class=\"greenColor\">Green</span> and <span class=\"yellowColor\">Orange</span> Zones in India</h4>\n        <div class=\"formZone\">\n            <form ngForm=\"covidForm\" [formGroup]=\"covidForm\">\n                <input type=\"text\" formControlName=\"District\" (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Search your district or state name...\">\n            </form>\n        </div>\n        <div class=\"zoneTable\">\n            <table width=\"100%\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n                <!-- District Column -->\n                <ng-container matColumnDef=\"District\">\n                <th mat-header-cell *matHeaderCellDef> District </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.District}} </td>\n                </ng-container>\n                <!-- State Column -->\n                <ng-container matColumnDef=\"State\">\n                <th mat-header-cell *matHeaderCellDef> State </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.State}} </td>\n                </ng-container>\n                <!-- Zone Column -->\n                <ng-container matColumnDef=\"Zone\">\n                <th mat-header-cell *matHeaderCellDef> Zone </th>\n                <td mat-cell *matCellDef=\"let element\" class=\"{{element.Zone}}\"> {{element.Zone}} </td>\n                </ng-container>\n                \n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n            </table>\n            <div [ngClass]=\"dataSource.filteredData.length > 0 ? 'hidden': 'visible'\">\n                <h6>Sorry, we couldn't find any result matching <b>\"{{inputData}}\"</b>. Please verify your speling and try again</h6>\n            </div>\n        </div>\n    </div>\n</div>\n<app-footer></app-footer>","import { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({\r\n  name: 'customerEmailFilter'\r\n})\r\nexport class SearchPipe implements PipeTransform {\r\n\r\n  transform(value: any, args?: any): any {\r\n    if (!args) {\r\n      return value;\r\n    }\r\n    return value.filter((val:any) => {\r\n      let rVal = ((val.email.toLocaleLowerCase().includes(args)));\r\n      return rVal;\r\n    })\r\n\r\n  }\r\n\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerService {\n  covidZone:any\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  getServerReq(method: string, apiEnd:string,){\n    const apiUrl = environment.API_URL + apiEnd;\n    if(method == 'get'){\n      return this.http.get(apiUrl);\n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  API_URL: 'https://api.rootnet.in/covid19-in/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}